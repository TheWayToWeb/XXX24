@burger-color: #007bff;
@burger-active-color: transparent;
@burger-transition: all 0.3s ease-in-out;
@burger-width-base: 50px; /* 50px */
@burger-bar-height-base: 4px; /* 4px */
@burger-border-radius: 8px;
@burger-button-padding-base: 10px; /* 10px */
@burger-button-spacing-xs: 8px; /* Очень маленький отступ */
@burger-button-spacing-sm: 12px; /* Маленький отступ (пример) */
@burger-button-spacing-md: 16px; /* Средний отступ (пример) */
@burger-button-spacing-lg: 24px;

// --- Mixins for Responsive Burger Button Margins ---
.burger-button-responsive-margin() {
    @media (min-width: 344px) {
        margin-top: @burger-button-spacing-xs;
        margin-right: @burger-button-spacing-xs;
    }
    @media (min-width: 576px) {
        margin-top: @burger-button-spacing-sm;
        margin-right: @burger-button-spacing-sm;
    }
    @media (min-width: 768px) {
        margin-top: @burger-button-spacing-md;
        margin-right: @burger-button-spacing-md;
    }
    @media (min-width: 992px) {
        margin-top: @burger-button-spacing-lg;
        margin-right: @burger-button-spacing-lg;
    }
}

// --- Mixins for Responsive Burger Button Size and Padding ---
.burger-button-responsive-size() {
    @media (min-width: 344px) {
        width: @burger-width-base;
        padding: calc(@burger-button-spacing-xs + 3px);
    }
    @media (min-width: 576px) {
        width: calc(@burger-width-base + 2px);
        padding: calc(@burger-button-spacing-sm + 5px);
    }
    @media (min-width: 768px) {
        width: calc(@burger-width-base + 10px);
        padding: @burger-button-spacing-md;
    }
    @media (min-width: 992px) {
        width: calc(@burger-width-base + 20px);
        padding: @burger-button-spacing-lg calc(@burger-button-spacing-lg - 5px);
    }
}

// --- Mixins for Responsive Burger Bar Height and Transforms ---
// This mixin defines how the bar's height and its pseudo-elements' transforms change per breakpoint.
.burger-bar-responsive-dimensions-and-transforms() {
    @media (min-width: 344px) {
        height: @burger-bar-height-base;
        &::before {
            transform: translateY(calc(@burger-bar-height-base * -1.75));
        }
        &::after {
            transform: translateY(calc(@burger-bar-height-base * 0.75));
        }
    }
    @media (min-width: 576px) {
        height: calc(@burger-bar-height-base * 1.25);
        &::before {
            transform: translateY(calc(@burger-bar-height-base * -2));
        }
        &::after {
            transform: translateY(calc(@burger-bar-height-base * 1.25));
        }
    }
    @media (min-width: 768px) {
        height: calc(@burger-bar-height-base * 1.25); // Original CSS had same values as 576px
        &::before {
            transform: translateY(calc(@burger-bar-height-base * -2)); // Original CSS had same values as 576px
        }
        &::after {
            transform: translateY(calc(@burger-bar-height-base * 1.25)); // Original CSS had same values as 576px
        }
    }
    @media (min-width: 992px) { // Original CSS had 1200px, but 992px was also used for other elements.
        // Following the 992px pattern for consistency, adjust if 1200px is intended.
        height: calc(@burger-bar-height-base * 1.75);
        &::before {
            transform: translateY(calc(@burger-bar-height-base * -3.25));
        }
        &::after {
            transform: translateY(calc(@burger-bar-height-base * 1.75));
        }
    }
}

.MovingMenuBurger {
    position: fixed;
    top: 0;
    right: 0;
    display: flex; /* Для центрирования содержимого */
    flex-direction: column; /* Расположение полосок вертикально */
    justify-content: space-between; /* Равномерное распределение пространства между полосками */
    transition: opacity 0.2s ease-in-out; /* Плавное изменение прозрачности при наведении */
    border-radius: 8px;
    border: 2px solid #007bff;
    background-color: #ffffff;
    cursor: pointer;
    z-index: 1000;

    // Apply mixins for responsive properties
    .burger-button-responsive-margin();
    .burger-button-responsive-size();
    &:hover {
        opacity: 0.8;
    }
    & span {
        display: block;
        width: 100%; /* Занимает всю ширину родителя (BurgerButton) */
        height: @burger-bar-height-base; /* 4px */
        background-color: @burger-color; /* #28a745 */
        border-radius: @burger-border-radius;
        transition: background-color @burger-transition, transform @burger-transition; /* Плавное изменение цвета и трансформации */
    }
    & span::before,
    & span::after {
        content: "";
        display: block;
        width: 100%; /* Занимает всю ширину родителя (BurgerButton) */
        height: @burger-bar-height-base; /* 4px */
        background-color: @burger-color; /* #28a745 */
        border-radius: @burger-border-radius;
    }
    span::before {
        transform: translateY(@burger-bar-height-base * -2.5); /* -10px */
    }
    span::after {
        transform: translateY(@burger-bar-height-base * 2); /* 10px */
    }
    &_Active {
        span {
            background-color: @burger-active-color;
        }
    }
    &_Active {
        span::before,
        span::after {
            transform: rotate(45deg);
        }
    }
    &_Active {
        span::after {
            margin-top: 0;
            transform: rotate(-45deg);
        }
    }
}